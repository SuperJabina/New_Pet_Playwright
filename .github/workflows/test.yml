name: UI tests

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: ["chromium", "firefox", "webkit"]  # Список браузеров прямо в .yml

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Copy .ci_env to .env
        run: |
          if [ -f .ci_env ]; then
            cp .ci_env .env
          else
            echo "No .ci_env file found, creating .env with defaults"
            echo "APP_URL=https://demoqa.com/" > .env
            echo "HEADLESS=True" >> .env
            echo "WINDOW_SIZE={\"width\":1920,\"height\":1080}" >> .env
            echo "SLOW=200" >> .env
            echo "LOCAL=ru-RU" >> .env
            echo "VIDEOS_DIR=./videos" >> .env
            echo "TRACING_DIR=./tracing" >> .env
            echo "SCREENSHOTS_DIR=./screenshots" >> .env
            echo "EXPECT_TIMEOUT=5000" >> .env
            echo "REMOTE_BROWSER=wss://cdp.browserstack.com/playwright?caps={\"browser\":\"chrome\",\"headless\":true}" >> .env
          fi

      - name: Debug .env contents
        run: |
          echo "Contents of .env:"
          cat .env

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps

      - name: Run UI tests with pytest and generate Allure results
        env:
          BROWSER_NAME: ${{ matrix.browser }}  # Передаём текущий браузер из матрицы
        run: |
          pytest -m regression --alluredir=allure-results-${{ matrix.browser }} --numprocesses 2

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results-${{ matrix.browser }}

  publish-report:
    needs: [run-tests]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          path: allure-results
        continue-on-error: true

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@v1.12
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_history: true
          keep_history_days: 30

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history