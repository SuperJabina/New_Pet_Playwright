name: UI tests

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: ["firefox", "webkit", "chromium"]
      fail-fast: false

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Copy .ci_env to .env
        run: |
          if [ -f .ci_env ]; then
            cp .ci_env .env
          else
            echo "No .ci_env file found, creating .env with defaults"
            echo "APP_URL=https://demoqa.com/" > .env
            echo "HEADLESS=True" >> .env
            echo "WINDOW_SIZE={\"width\":1920,\"height\":1080}" >> .env
            echo "SLOW=200" >> .env
            echo "LOCAL=ru-RU" >> .env
            echo "VIDEOS_DIR=./videos" >> .env
            echo "TRACING_DIR=./tracing" >> .env
            echo "SCREENSHOTS_DIR=./screenshots" >> .env
            echo "EXPECT_TIMEOUT=5000" >> .env
            echo "REMOTE_BROWSER=${{ secrets.REMOTE_BROWSER_URL }}" >> .env
          fi

      - name: Debug .env contents
        run: |
          echo "Contents of .env:"
          cat .env

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps
          pip list

      - name: Run UI tests with pytest and generate Allure results
        run: |
          pytest -m regression --browser-name=${{ matrix.browser }} || echo "Tests failed, continuing..."
        continue-on-error: true

      - name: Debug pytest results
        run: |
          echo "Contents of allure-results:"
          ls -la allure-results || echo "No Allure results found"
          find allure-results -type f -exec echo "File: {}" \; -exec cat {} \; || echo "No files in allure-results"

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results
          retention-days: 5
        continue-on-error: true

  publish-report:
    runs-on: ubuntu-latest
    needs: run-tests
    if: always() && needs.run-tests.result != 'cancelled'

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Initialize gh-pages branch if it doesn't exist
        run: |
          git fetch origin gh-pages || true
          if ! git rev-parse --verify origin/gh-pages >/dev/null 2>&1; then
            git checkout --orphan gh-pages
            mkdir -p allure-history
            git add allure-history
            git commit --allow-empty -m "Initialize gh-pages branch for Allure reports"
            git push origin gh-pages
          fi

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Download Allure results for firefox
        uses: actions/download-artifact@v4
        with:
          name: allure-results-firefox
          path: allure-results-firefox

      - name: Download Allure results for webkit
        uses: actions/download-artifact@v4
        with:
          name: allure-results-webkit
          path: allure-results-webkit

      - name: Merge Allure results
        run: |
          mkdir -p allure-results
          cp -r allure-results-firefox/* allure-results/ || echo "No firefox results to copy"
          cp -r allure-results-webkit/* allure-results/ || echo "No webkit results to copy"
          ls -la allure-results

      - name: Generate Allure report
        uses: simple-elf/allure-report-action@v1.12
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_history: allure-history
          gh_pages: gh-pages
        continue-on-error: true

      - name: Deploy report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
        continue-on-error: true
